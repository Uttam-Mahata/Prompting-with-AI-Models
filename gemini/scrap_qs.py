import os
import requests
from bs4 import BeautifulSoup
from dotenv import load_dotenv
import google.generativeai as genai

# Step 1: Load environment variables from .env file (for API keys, etc.)
load_dotenv()

# Step 2: Configure Google Gemini API
genai.configure(api_key=os.environ["API_KEY"])

# Step 3: Function to scrape questions from the specified webpage
def scrape_questions():
    url = "https://questions.examside.com/past-years/jee/jee-main/physics/vector-algebra"
    response = requests.get(url)
    
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, "html.parser")
        
        # Find the div with the specified class containing the questions
        question_div = soup.find("div", class_="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2 lg:gap-4")
        
        if question_div:
            # Extract text content from the div
            questions = question_div.get_text(separator="\n", strip=True)
            return questions
        else:
            print("No questions found in the specified div.")
            return None
    else:
        print(f"Failed to retrieve the webpage. Status code: {response.status_code}")
        return None

# Step 4: Function to generate structured questions in LaTeX format using Gemini API
def generate_latex_structure(scraped_data):
    # Define the LaTeX structure prompt for Gemini API
    prompt = (
        f"Organize the following questions into a professional LaTeX format for a question paper to use in overleaf. Keep Questions content as it is. Don't change the content. "
        f"Include question numbering, headings, and topic names:\n{scraped_data}"
    )
    
    # Using Gemini-1.5-flash model to generate LaTeX content
    model = genai.GenerativeModel("gemini-1.5-flash")
    response = model.generate_content(prompt)
    
    # Extracting and returning the LaTeX content generated by the Gemini API
    return response.text

# Step 5: Function to save the LaTeX content to a .tex file
def save_to_latex(latex_content, filename="structured_questions.tex"):
    with open(filename, "w", encoding="utf-8") as file:
        file.write(latex_content)
    print(f"LaTeX content saved to '{filename}'.")

# Main execution
if __name__ == "__main__":
    try:
        # Scrape the questions from the webpage
        scraped_questions = scrape_questions()
        
        if scraped_questions:
            print("Scraped Questions:\n", scraped_questions)
            
            # Generate structured LaTeX format using Gemini API
            latex_content = generate_latex_structure(scraped_questions)
            print("Generated LaTeX Content:\n", latex_content)
            
            # Save the generated LaTeX content to a .tex file
            save_to_latex(latex_content)
    
    except Exception as e:
        print(f"An error occurred: {e}")
